{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "assignment1.py",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyMiwtJN747OwVSkd0QXQ0OH",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/shivammore/python/blob/master/assignment1py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ExmP3Y3FsaUt",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "cdd5c13f-76e0-4816-f305-7b8d4d25fb90"
      },
      "source": [
        "def large(n1,n2,n3) :\n",
        "  if n1>n3 and n1>n2 :\n",
        "    return n1\n",
        "  elif n2>n1 and n2>n3 :\n",
        "    return n2\n",
        "  else :\n",
        "    return n3\n",
        "\n",
        "def main() :\n",
        "  n1,n2,n3=eval(input(\"Enter three numbers to find out large Number:\"))\n",
        "  print(\"Large Number:\",large(n1,n2,n3))\n",
        "\n",
        "main()  \n"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Enter three numbers to find out large Number:7,34,66\n",
            "Large Number: 66\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_yhzl9c8uI8h",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 119
        },
        "outputId": "8872bc58-205a-421a-dee1-a97be753bf93"
      },
      "source": [
        "def main() :\n",
        "  lst = [] \n",
        "  n = int(input(\"Enter number of elements : \")) \n",
        "  for i in range(0, n): \n",
        "    ele = int(input()) \n",
        "    lst.append(ele)\n",
        "  print(lst)\n",
        "  sort(n,lst)\n",
        "\n",
        "def sort(n,lst) :\n",
        "  temp=0\n",
        "  for i in range(0,n-1) :\n",
        "    if lst[i]>lst[i+1]:\n",
        "      temp=lst[i]\n",
        "      lst[i]=lst[i+1]\n",
        "      lst[i+1]=temp\n",
        "\n",
        "  print(lst)      \n",
        "main()"
      ],
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Enter number of elements : 3\n",
            "2\n",
            "5\n",
            "3\n",
            "[2, 5, 3]\n",
            "[2, 3, 5]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xbffMCJlyzc-",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 323
        },
        "outputId": "e0f2896d-1064-4e5a-c489-e4e5ff4b7de5"
      },
      "source": [
        "def main() :\n",
        "  R = eval(input(\"Enter the number of rows:\")) \n",
        "  C = eval(input(\"Enter the number of columns:\")) \n",
        "  matrix = [] \n",
        "  print(\"Enter the entries rowwise:\") \n",
        "  \n",
        "  for i in range(0,R-1):          \n",
        "     a =[] \n",
        "     for j in range(0,C-1):      \n",
        "      a.append(eval(input())) \n",
        "     matrix.append(a) \n",
        "  \n",
        "  for i in range(0,R-1): \n",
        "      for j in range(0,C-1): \n",
        "          print(matrix[i][j], end = \" \") \n",
        "      print() \n",
        "\n",
        "main()      "
      ],
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Enter the number of rows:4\n",
            "Enter the number of columns:5\n",
            "Enter the entries rowwise:\n",
            "3\n",
            "4\n",
            "1\n",
            "2\n",
            "6\n",
            "5\n",
            "8\n",
            "7\n",
            "9\n",
            "13\n",
            "14\n",
            "15\n",
            "3 4 1 2 \n",
            "6 5 8 7 \n",
            "9 13 14 15 \n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}